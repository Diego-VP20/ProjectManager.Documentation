### YamlMime:XRefMap
sorted: true
references:
- uid: ProjectManager.App.Handlers
  name: ProjectManager.App.Handlers
  href: api/ProjectManager.App.Handlers.html
  commentId: N:ProjectManager.App.Handlers
  fullName: ProjectManager.App.Handlers
  nameWithType: ProjectManager.App.Handlers
- uid: ProjectManager.App.Handlers.IQueryLoggingHandler
  name: IQueryLoggingHandler
  href: api/ProjectManager.App.Handlers.IQueryLoggingHandler.html
  commentId: T:ProjectManager.App.Handlers.IQueryLoggingHandler
  fullName: ProjectManager.App.Handlers.IQueryLoggingHandler
  nameWithType: IQueryLoggingHandler
- uid: ProjectManager.App.Handlers.IQueryLoggingHandler.RunAndLogQuery*
  name: RunAndLogQuery
  href: api/ProjectManager.App.Handlers.IQueryLoggingHandler.RunAndLogQuery.html
  commentId: Overload:ProjectManager.App.Handlers.IQueryLoggingHandler.RunAndLogQuery
  fullName: ProjectManager.App.Handlers.IQueryLoggingHandler.RunAndLogQuery
  nameWithType: IQueryLoggingHandler.RunAndLogQuery
- uid: ProjectManager.App.Handlers.IQueryLoggingHandler.RunAndLogQuery``1(Func{Task{``0}})
  name: RunAndLogQuery<T>(Func<Task<T>>)
  href: api/ProjectManager.App.Handlers.IQueryLoggingHandler.RunAndLogQuery.html#ProjectManager_App_Handlers_IQueryLoggingHandler_RunAndLogQuery__1_Func_Task___0___
  commentId: M:ProjectManager.App.Handlers.IQueryLoggingHandler.RunAndLogQuery``1(Func{Task{``0}})
  name.vb: RunAndLogQuery(Of T)(Func(Of Task(Of T)))
  fullName: ProjectManager.App.Handlers.IQueryLoggingHandler.RunAndLogQuery<T>(Func<Task<T>>)
  fullName.vb: ProjectManager.App.Handlers.IQueryLoggingHandler.RunAndLogQuery(Of T)(Func(Of Task(Of T)))
  nameWithType: IQueryLoggingHandler.RunAndLogQuery<T>(Func<Task<T>>)
  nameWithType.vb: IQueryLoggingHandler.RunAndLogQuery(Of T)(Func(Of Task(Of T)))
- uid: ProjectManager.App.Helpers
  name: ProjectManager.App.Helpers
  href: api/ProjectManager.App.Helpers.html
  commentId: N:ProjectManager.App.Helpers
  fullName: ProjectManager.App.Helpers
  nameWithType: ProjectManager.App.Helpers
- uid: ProjectManager.App.Helpers.IPasswordHasher
  name: IPasswordHasher
  href: api/ProjectManager.App.Helpers.IPasswordHasher.html
  commentId: T:ProjectManager.App.Helpers.IPasswordHasher
  fullName: ProjectManager.App.Helpers.IPasswordHasher
  nameWithType: IPasswordHasher
- uid: ProjectManager.App.Helpers.IPasswordHasher.HashPasswordAsync(System.String)
  name: HashPasswordAsync(String)
  href: api/ProjectManager.App.Helpers.IPasswordHasher.HashPasswordAsync.html#ProjectManager_App_Helpers_IPasswordHasher_HashPasswordAsync_System_String_
  commentId: M:ProjectManager.App.Helpers.IPasswordHasher.HashPasswordAsync(System.String)
  fullName: ProjectManager.App.Helpers.IPasswordHasher.HashPasswordAsync(System.String)
  nameWithType: IPasswordHasher.HashPasswordAsync(String)
- uid: ProjectManager.App.Helpers.IPasswordHasher.HashPasswordAsync*
  name: HashPasswordAsync
  href: api/ProjectManager.App.Helpers.IPasswordHasher.HashPasswordAsync.html
  commentId: Overload:ProjectManager.App.Helpers.IPasswordHasher.HashPasswordAsync
  fullName: ProjectManager.App.Helpers.IPasswordHasher.HashPasswordAsync
  nameWithType: IPasswordHasher.HashPasswordAsync
- uid: ProjectManager.App.Helpers.IPasswordHasher.VerifyPasswordAsync(System.String,System.String)
  name: VerifyPasswordAsync(String, String)
  href: api/ProjectManager.App.Helpers.IPasswordHasher.VerifyPasswordAsync.html#ProjectManager_App_Helpers_IPasswordHasher_VerifyPasswordAsync_System_String_System_String_
  commentId: M:ProjectManager.App.Helpers.IPasswordHasher.VerifyPasswordAsync(System.String,System.String)
  fullName: ProjectManager.App.Helpers.IPasswordHasher.VerifyPasswordAsync(System.String, System.String)
  nameWithType: IPasswordHasher.VerifyPasswordAsync(String, String)
- uid: ProjectManager.App.Helpers.IPasswordHasher.VerifyPasswordAsync*
  name: VerifyPasswordAsync
  href: api/ProjectManager.App.Helpers.IPasswordHasher.VerifyPasswordAsync.html
  commentId: Overload:ProjectManager.App.Helpers.IPasswordHasher.VerifyPasswordAsync
  fullName: ProjectManager.App.Helpers.IPasswordHasher.VerifyPasswordAsync
  nameWithType: IPasswordHasher.VerifyPasswordAsync
- uid: ProjectManager.App.Services.Account
  name: ProjectManager.App.Services.Account
  href: api/ProjectManager.App.Services.Account.html
  commentId: N:ProjectManager.App.Services.Account
  fullName: ProjectManager.App.Services.Account
  nameWithType: ProjectManager.App.Services.Account
- uid: ProjectManager.App.Services.Account.IUserService
  name: IUserService
  href: api/ProjectManager.App.Services.Account.IUserService.html
  commentId: T:ProjectManager.App.Services.Account.IUserService
  fullName: ProjectManager.App.Services.Account.IUserService
  nameWithType: IUserService
- uid: ProjectManager.App.Services.Account.IUserService.ChangeEmail(System.Int32,System.String)
  name: ChangeEmail(Int32, String)
  href: api/ProjectManager.App.Services.Account.IUserService.ChangeEmail.html#ProjectManager_App_Services_Account_IUserService_ChangeEmail_System_Int32_System_String_
  commentId: M:ProjectManager.App.Services.Account.IUserService.ChangeEmail(System.Int32,System.String)
  fullName: ProjectManager.App.Services.Account.IUserService.ChangeEmail(System.Int32, System.String)
  nameWithType: IUserService.ChangeEmail(Int32, String)
- uid: ProjectManager.App.Services.Account.IUserService.ChangeEmail*
  name: ChangeEmail
  href: api/ProjectManager.App.Services.Account.IUserService.ChangeEmail.html
  commentId: Overload:ProjectManager.App.Services.Account.IUserService.ChangeEmail
  fullName: ProjectManager.App.Services.Account.IUserService.ChangeEmail
  nameWithType: IUserService.ChangeEmail
- uid: ProjectManager.App.Services.Account.IUserService.ChangePassword(System.Int32,System.String)
  name: ChangePassword(Int32, String)
  href: api/ProjectManager.App.Services.Account.IUserService.ChangePassword.html#ProjectManager_App_Services_Account_IUserService_ChangePassword_System_Int32_System_String_
  commentId: M:ProjectManager.App.Services.Account.IUserService.ChangePassword(System.Int32,System.String)
  fullName: ProjectManager.App.Services.Account.IUserService.ChangePassword(System.Int32, System.String)
  nameWithType: IUserService.ChangePassword(Int32, String)
- uid: ProjectManager.App.Services.Account.IUserService.ChangePassword*
  name: ChangePassword
  href: api/ProjectManager.App.Services.Account.IUserService.ChangePassword.html
  commentId: Overload:ProjectManager.App.Services.Account.IUserService.ChangePassword
  fullName: ProjectManager.App.Services.Account.IUserService.ChangePassword
  nameWithType: IUserService.ChangePassword
- uid: ProjectManager.App.Services.Account.IUserService.CreateUserAsync(System.String,System.String,System.String)
  name: CreateUserAsync(String, String, String)
  href: api/ProjectManager.App.Services.Account.IUserService.CreateUserAsync.html#ProjectManager_App_Services_Account_IUserService_CreateUserAsync_System_String_System_String_System_String_
  commentId: M:ProjectManager.App.Services.Account.IUserService.CreateUserAsync(System.String,System.String,System.String)
  fullName: ProjectManager.App.Services.Account.IUserService.CreateUserAsync(System.String, System.String, System.String)
  nameWithType: IUserService.CreateUserAsync(String, String, String)
- uid: ProjectManager.App.Services.Account.IUserService.CreateUserAsync*
  name: CreateUserAsync
  href: api/ProjectManager.App.Services.Account.IUserService.CreateUserAsync.html
  commentId: Overload:ProjectManager.App.Services.Account.IUserService.CreateUserAsync
  fullName: ProjectManager.App.Services.Account.IUserService.CreateUserAsync
  nameWithType: IUserService.CreateUserAsync
- uid: ProjectManager.App.Services.Account.IUserService.DeleteUserAsync(System.Int32)
  name: DeleteUserAsync(Int32)
  href: api/ProjectManager.App.Services.Account.IUserService.DeleteUserAsync.html#ProjectManager_App_Services_Account_IUserService_DeleteUserAsync_System_Int32_
  commentId: M:ProjectManager.App.Services.Account.IUserService.DeleteUserAsync(System.Int32)
  fullName: ProjectManager.App.Services.Account.IUserService.DeleteUserAsync(System.Int32)
  nameWithType: IUserService.DeleteUserAsync(Int32)
- uid: ProjectManager.App.Services.Account.IUserService.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/ProjectManager.App.Services.Account.IUserService.DeleteUserAsync.html
  commentId: Overload:ProjectManager.App.Services.Account.IUserService.DeleteUserAsync
  fullName: ProjectManager.App.Services.Account.IUserService.DeleteUserAsync
  nameWithType: IUserService.DeleteUserAsync
- uid: ProjectManager.App.Services.Account.IUserService.GetUserAsync(System.String)
  name: GetUserAsync(String)
  href: api/ProjectManager.App.Services.Account.IUserService.GetUserAsync.html#ProjectManager_App_Services_Account_IUserService_GetUserAsync_System_String_
  commentId: M:ProjectManager.App.Services.Account.IUserService.GetUserAsync(System.String)
  fullName: ProjectManager.App.Services.Account.IUserService.GetUserAsync(System.String)
  nameWithType: IUserService.GetUserAsync(String)
- uid: ProjectManager.App.Services.Account.IUserService.GetUserAsync*
  name: GetUserAsync
  href: api/ProjectManager.App.Services.Account.IUserService.GetUserAsync.html
  commentId: Overload:ProjectManager.App.Services.Account.IUserService.GetUserAsync
  fullName: ProjectManager.App.Services.Account.IUserService.GetUserAsync
  nameWithType: IUserService.GetUserAsync
- uid: ProjectManager.App.Services.Account.IUserService.UpdateUserAsync(ProjectManager.Database.Models.User,ProjectManager.Database.Models.User)
  name: UpdateUserAsync(User, User)
  href: api/ProjectManager.App.Services.Account.IUserService.UpdateUserAsync.html#ProjectManager_App_Services_Account_IUserService_UpdateUserAsync_ProjectManager_Database_Models_User_ProjectManager_Database_Models_User_
  commentId: M:ProjectManager.App.Services.Account.IUserService.UpdateUserAsync(ProjectManager.Database.Models.User,ProjectManager.Database.Models.User)
  fullName: ProjectManager.App.Services.Account.IUserService.UpdateUserAsync(ProjectManager.Database.Models.User, ProjectManager.Database.Models.User)
  nameWithType: IUserService.UpdateUserAsync(User, User)
- uid: ProjectManager.App.Services.Account.IUserService.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/ProjectManager.App.Services.Account.IUserService.UpdateUserAsync.html
  commentId: Overload:ProjectManager.App.Services.Account.IUserService.UpdateUserAsync
  fullName: ProjectManager.App.Services.Account.IUserService.UpdateUserAsync
  nameWithType: IUserService.UpdateUserAsync
- uid: ProjectManager.App.Services.Account.IUserService.ValidateUser(System.String,ProjectManager.Database.Models.User)
  name: ValidateUser(String, User)
  href: api/ProjectManager.App.Services.Account.IUserService.ValidateUser.html#ProjectManager_App_Services_Account_IUserService_ValidateUser_System_String_ProjectManager_Database_Models_User_
  commentId: M:ProjectManager.App.Services.Account.IUserService.ValidateUser(System.String,ProjectManager.Database.Models.User)
  fullName: ProjectManager.App.Services.Account.IUserService.ValidateUser(System.String, ProjectManager.Database.Models.User)
  nameWithType: IUserService.ValidateUser(String, User)
- uid: ProjectManager.App.Services.Account.IUserService.ValidateUser*
  name: ValidateUser
  href: api/ProjectManager.App.Services.Account.IUserService.ValidateUser.html
  commentId: Overload:ProjectManager.App.Services.Account.IUserService.ValidateUser
  fullName: ProjectManager.App.Services.Account.IUserService.ValidateUser
  nameWithType: IUserService.ValidateUser
